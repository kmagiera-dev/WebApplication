@model Repository.Models.Product

@{
    ViewBag.Title = "Edit product nr: " + @Model.Id;
}

<h2>Edit product nr: @Model.Id</h2>
@if (ViewBag.Error == true)
{
    <div class="alert alert-danger" role="alert">
        Unable to edit product.<br />
        Try again.
    </div>
}
else if (ViewBag.Error == false)
{
    <div class="alert alert-success" role="alert">
        Product edited successfully.
    </div>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(m => m.Id);

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-link" })  
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
